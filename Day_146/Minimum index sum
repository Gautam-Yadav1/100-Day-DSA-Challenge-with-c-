class Solution {
public:
    vector<string> findRestaurant(vector<string>& list1, vector<string>& list2);
};
/***************************************************************/
vector<string> Solution::findRestaurant(vector<string>& list1, vector<string>& list2) {
    map<string,int> m1;
    int i, size = list1.size(), minSum = INT_MAX, sum;
    vector<string> res;
    for(i = 0; i < size; ++i) {
        m1[list1[i]] = i;
    }
    size = list2.size();
    for(i = 0; i < size; ++i) {
        if (m1.find(list2[i]) != m1.end()) {
            sum =m1[list2[i]] + i;
            if (sum < minSum) {
                minSum = sum;
                res.clear();
                res.emplace_back(list2[i]);
            } else if (sum == minSum) {
                res.emplace_back(list2[i]);
            }
        }
    }
    return res;
}
/***************************************************************/
